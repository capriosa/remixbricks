{
  "version": 3,
  "sources": ["browser-route-module:/Users/md/github-repos/remixbricks/app/routes/blog/list.tsx?browser", "../../../../app/routes/blog/list.tsx", "../../../../app/components/PostListItem.tsx"],
  "sourcesContent": ["export { default } from \"/Users/md/github-repos/remixbricks/app/routes/blog/list.tsx\";", "import { fetchPages, fetchTags, types } from 'react-bricks/frontend'\nimport { useLoaderData, Link } from 'remix'\n\nimport BlogListItem from '~/components/PostListItem'\n\nexport const loader = async () => {\n  \n  const posts = await fetchPages(process.env.API_KEY as string, {\n    type: 'blog',\n    pageSize: 1000,\n    sort: '-publishedAt',\n  })\n\n  const { items: tags } = await fetchTags(process.env.API_KEY as string)\n  tags.sort()\n\n  return { posts, tags }\n}\n\nexport default function List() {\n  const { posts, tags } =\n    useLoaderData<{ posts: types.PageFromList[]; tags: string[] }>()\n\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-center text-4xl sm:text-6xl lg:text-7xl leading-none font-black tracking-tight text-gray-900 pb-4 mt-10 sm:mt-12 mb-4\">\n        Blog\n      </h1>\n      <div className=\"max-w-6xl mx-auto px-8 py-16 flex space-x-24\">\n        <section style={{ flex: '2 2 0' }} className=\"flex-2 space-y-8\">\n          <h2 className=\"text-pink-500 uppercase mb-8 tracking-widest font-bold\">\n            Recently published\n          </h2>\n          {posts?.map((post) => (\n            <BlogListItem\n              key={post.id}\n              title={post.name}\n              href={`/blog/posts/${post.slug}`}\n              content={post.meta.description || ''}\n            />\n          ))}\n        </section>\n        <section className=\"flex-1 space-y-16\">\n          <div>\n            <h2 className=\"text-pink-500 uppercase mb-8 tracking-widest font-bold\">\n              Tags\n            </h2>\n            <div className=\"flex flex-wrap items-center\">\n              {tags\n                ?.filter((tag) => tag !== 'popular')\n                .map((tag) => (\n                  <Link\n                    to={`/tag/${tag}`}\n                    key={tag}\n                    className=\"inline-block text-sm font-bold mr-2 mb-2 transform duration-200 text-cyan-800 bg-cyan-100 hover:bg-cyan-200 hover:text-cyan-900 rounded-md px-2 py-1\"\n                  >\n                    <div className=\"\" style={{ zIndex: -1 }} />\n                    {tag}\n                  </Link>\n                ))}\n            </div>\n          </div>\n          <div>\n            <h2 className=\"text-pink-500 uppercase mb-8 tracking-widest font-bold\">\n              Most Popular\n            </h2>\n            <ul>\n              {posts\n                ?.filter((post) => post.tags.find((tag) => tag === 'popular'))\n                .map((post) => (\n                  <li key={post.id}>\n                    <a\n                      href={post.slug}\n                      className=\"text-gray-900 hover:text-cyan-600 font-bold text-lg leading-10 transition-colors\"\n                    >\n                      {post.name}\n                    </a>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n", "import React from 'react'\nimport { Link } from 'remix'\n\ninterface PostListItemProps {\n  title: string\n  href: string\n  content: string\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n  title,\n  href,\n  content,\n}) => {\n  return (\n    <Link\n      to={href}\n      className=\"flex-1 block group py-4 text-gray-900 hover:bg-gray-50 transition-colors duration-300 p-6 -m-6 rounded\"\n    >\n      <h3 className=\"font-bold text-2xl\">{title}</h3>\n      <p className=\"mt-4 leading-6 text-lg\">{content}</p>\n      <div className=\"flex items-center mt-4 text-cyan-500 group-hover:text-cyan-600 font-semibold\">\n        <div className=\"mr-2 group-hover:mr-4 transition-all duration-300\">\n          Read More\n        </div>\n        &raquo;\n      </div>\n    </Link>\n  )\n}\n\nexport default PostListItem\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AAAA,mBAAkB;AASlB,IAAM,eAA4C,CAAC;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,MACI;AACJ,SACE,mDAAC,MAAD;AAAA,IACE,IAAI;AAAA,IACJ,WAAU;AAAA,KAEV,mDAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAsB,QACpC,mDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA0B,UACvC,mDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,mDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAoD,cAE7D;AAAA;AAOd,IAAO,uBAAQ;;;ADZA,gBAAgB;AAC7B,QAAM,EAAE,OAAO,SACb;AAEF,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA6H,SAG3I,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IAAS,OAAO,EAAE,MAAM;AAAA,IAAW,WAAU;AAAA,KAC3C,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyD,uBAGtE,+BAAO,IAAI,CAAC,SACX,oCAAC,sBAAD;AAAA,IACE,KAAK,KAAK;AAAA,IACV,OAAO,KAAK;AAAA,IACZ,MAAM,eAAe,KAAK;AAAA,IAC1B,SAAS,KAAK,KAAK,eAAe;AAAA,QAIxC,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyD,SAGvE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,6BACG,OAAO,CAAC,QAAQ,QAAQ,WACzB,IAAI,CAAC,QACJ,oCAAC,MAAD;AAAA,IACE,IAAI,QAAQ;AAAA,IACZ,KAAK;AAAA,IACL,WAAU;AAAA,KAEV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAG,OAAO,EAAE,QAAQ;AAAA,MAClC,SAKX,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyD,iBAGvE,oCAAC,MAAD,MACG,+BACG,OAAO,CAAC,SAAS,KAAK,KAAK,KAAK,CAAC,QAAQ,QAAQ,YAClD,IAAI,CAAC,SACJ,oCAAC,MAAD;AAAA,IAAI,KAAK,KAAK;AAAA,KACZ,oCAAC,KAAD;AAAA,IACE,MAAM,KAAK;AAAA,IACX,WAAU;AAAA,KAET,KAAK;AAAA;",
  "names": []
}
