{
  "version": 3,
  "sources": ["browser-route-module:/Users/md/github-repos/my-remix-app/app/routes/index.tsx?browser", "../../../app/routes/index.tsx"],
  "sourcesContent": ["export { ErrorBoundary, default, meta } from \"/Users/md/github-repos/my-remix-app/app/routes/index.tsx\";", "import { useContext } from 'react'\nimport type { MetaFunction } from 'remix'\nimport {\n  ReactBricksContext,\n  PageViewer,\n  fetchPage,\n  cleanPage,\n} from 'react-bricks/frontend'\nimport { useLoaderData } from 'remix'\nimport ErrorMessage from '~/components/ErrorMessage'\nimport Layout from '~/components/Layout'\n\nexport const loader = async () => {\n  const HOME_PAGE = 'home'\n  try {\n    const page = await fetchPage(HOME_PAGE, process.env.API_KEY as string)\n    return { page }\n  } catch {\n    throw new Error(`Cannot find the \"${HOME_PAGE}\" page.`)\n  }\n}\n\nconst Page = () => {\n  const { page } = useLoaderData()\n  // Clean the received content\n  // Removes unknown or not allowed bricks\n  const { pageTypes, bricks } = useContext(ReactBricksContext)\n  const pageOk = page ? cleanPage(page, pageTypes, bricks) : null\n\n  return (\n    <Layout>\n      <PageViewer page={pageOk} />\n    </Layout>\n  )\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'React Bricks Blog',\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Layout>\n      <ErrorMessage error={error} />\n    </Layout>\n  )\n}\n\nexport default Page\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,mBAA2B;AAsB3B,IAAM,OAAO,MAAM;AACjB,QAAM,EAAE,SAAS;AAGjB,QAAM,EAAE,WAAW,WAAW,6BAAW;AACzC,QAAM,SAAS,OAAO,GAAU,MAAM,WAAW,UAAU;AAE3D,SACE,oCAAC,gBAAD,MACE,oCAAC,IAAD;AAAA,IAAY,MAAM;AAAA;AAAA;AAKjB,IAAM,OAAqB,MAAM;AACtC,SAAO;AAAA,IACL,OAAO;AAAA;AAAA;AAIJ,uBAAuB,EAAE,SAA2B;AACzD,SACE,oCAAC,gBAAD,MACE,oCAAC,sBAAD;AAAA,IAAc;AAAA;AAAA;AAKpB,IAAO,iBAAQ;",
  "names": []
}
